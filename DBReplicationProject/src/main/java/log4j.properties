# Import and Create Logger Objecj in Class Files Using following two Lines of Code
#import org.apache.log4j.Logger;
#static Logger log = Logger.getLogger({ClassName}.class.getName());

#Set Logging Path {Change the path as per Requirement}
#log = /fs1/IBM/ICNAutoActions/logs  #This Path is for Linux OS
#basePath=C:/Users/admin/Desktop/KotakKeFiles/
basePath= D:/DB_UTILITY/
logPath = HRMS_HRRM_Mapping Utility/DBTableMappingActions/logs/
logFileName=${current.date.time}_DBTableMappingActions.log
# D:/DB_UTILITY/HRMS_HRRM_Mapping Utility/DBTableMappingActions/logs
# Define the root logger with appender file {Use INFO to DEBUG & WARN for Summary OUTPUT !!Do NOT USE DEBUG MODE}

log4j.rootLogger = TRACE, FILE
#log4j.rootLogger = DEBUG, FILE
#log4j.rootLogger = WARN, FILE
#log4j.rootLogger = ERROR, FILE
#log4j.rootLogger = FATAL, FILE
#log4j.rootLogger = OFF, FILE

# Define the file appender [ Redirect logs to a file]
#log4j.appender.R.MaxFileSize=10MB
#log4j.appender.R.MaxBackupIndex=50
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.Append=false
log4j.appender.FILE.File=${basePath}${logPath}/${logFileName}


# Define the layout for file appender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.conversionPattern=%d{dd MMM yyyy HH:mm:ss} %c%x-%m%n
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

